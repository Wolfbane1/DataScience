rankhospital("AL", "heart attack")
source("rankhospital.R")
rankhospital("BB", "heart attack")
rankhospital("AL", "heat attack")
rankhospital("AL", "heart attack")
source("rankhospital.R")
rankhospital("BB", "heart attack")
rankhospital("AL", "heat attack")
source("rankhospital.R")
rankhospital("BB", "heart attack")
rankhospital("AL", "heat attack")
rankhospital("AL", "heart attack")
as.numeric(NA)
source("rankhospital.R")
d <- read.csv(file.path(getwd(), "data", "outcome-of-care-measures.csv"), colClasses = "character")
state <- "TX"
outcome <- "heart failure"
d[d$State==state, col[,outcome]]
c <- c('Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack',
'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia',
'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure')
col <- matrix(c, nrow=1, ncol=3)
colnames(col) <- c('heart attack', 'pneumonia', 'heart failure')
rm(c)
d[d$State==state, col[,outcome]]
suppressWarnings(d[d$State==state, col[,outcome]] <- as.numeric(d[d$State==state, col[,outcome]]))
d[d$State==state, col[,outcome]]
rv <- validateRankin(d[d$State==state, col[,outcome]], "1")
source("rankhospital.R")
rv <- validateRank(d[d$State==state, col[,outcome]], "1")
v <- NA
t <- data.frame(State = names(tapply(o$State, o$State, length)),
Freq = tapply(o$State, o$State, length))
o <- d[d$State==state, col[,outcome]]
o <- d[d$State==state, 'State']
t <- data.frame(State = names(tapply(o$State, o$State, length)),
Freq = tapply(o$State, o$State, length))
t<- tapply(o$State, o$State, length)
t<- tapply(o, o, length)
t
dim(t)
as.numeric(t)
t<- as.numeric(tapply(o, o, length))
rank <- "1"
if ( is.numeric(rank) ) {
r <- as.numeric(rank)
if ( r <= nrows(o) ) {
v <- r
}
}
else if ( rank == "best" ) {
if ( is.numeric(rank) ) {
r <- as.numeric(rank)
if ( r <= nrows(o) ) {
v <- r
}
}else if ( rank == "best" ) {
v <- "1"
}
else if ( rank == "worst" ) {
v <- "ordernar"
}
if ( is.numeric(rank) ) {
r <- as.numeric(rank)
if ( r <= nrows(o) ) {
v <- r
}
}else if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
r <- "-1"
is.numeric(rank)
is.numeric(as.numeric(rank))
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( ! is.numeric(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= nrows(o) ) {
v <- r
}
}
! is.numeric(rank)
! is.numeric(as.numeric(rank))
if ( ! is.numeric(as.numeric(rank)) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= nrows(o) ) {
v <- r
}
}
length(o)
if ( ! is.numeric(as.numeric(rank)) ) {  if ( rank == "best" ) {    v <- "1"  }else if ( rank == "worst" ) {    v <- "ordernar"  }}else {  r <- as.numeric(rank)    if ( r <= length(o) ) {    v <- r  }}
if ( ! is.numeric(as.numeric(rank)) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- "100"
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( ! is.numeric(as.numeric(rank)) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- "500"
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( ! is.numeric(as.numeric(rank)) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- "besta"
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( ! is.numeric(as.numeric(rank)) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- 1
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( is.character(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- 100
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( is.character(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- 500
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( is.character(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- "jjj"
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( is.character(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
rank <- "best"
v <- NA
r <- "-1"
t<- as.numeric(tapply(o, o, length))
#Checking is
if ( is.character(rank) ) {
if ( rank == "best" ) {
v <- "1"
}else if ( rank == "worst" ) {
v <- "ordernar"
}
}else {
r <- as.numeric(rank)
if ( r <= length(o) ) {
v <- r
}
}
source("rankhospital.R")
rank = 1
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
rm (o)
rm(r)
rm(t)
rm(v)
rank = 100
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
rank = 500
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
rank = "best"
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
rank = "worst"
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
rank = "worst"
rv <- validateRank(d[d$State==state, 'state'], rank)
d[d$State==state, 'state']
d[d$State==state, 'State']
rank = "worst"
rv <- validateRank(d[d$State==state, 'State'], rank)
rank = "best"
rv <- validateRank(d[d$State==state, 'State'], rank)
rank = "1"
rv <- validateRank(d[d$State==state, 'State'], rank)
suppressWarnings(d[d$State==state, col[,outcome]] <- as.numeric(d[d$State==state, col[,outcome]]))
o <- d[d$State==state, 'State']
rm(o)
y <- as.data.frame(cbind(d[d$State==state, col[,outcome]], d[d$State== state,"Hospital.Name"]))
View(y)
colnames(y) <- c("Hospital.Name", "rate")
colnames(y) <- c("rate", "Hospital.Name")
#take away NAs.
y <- y[! is.na(y$rate), ]
View(y)
y1 <- order(-y$rate, y$Hospital.Name)
y1 <- order(-levels(y$rate), y$Hospital.Name)
y1 <- order(-as.numeric(levels(y$rate)), y$Hospital.Name)
View(y)
y1 <- as.numeric(levels(y$rate))
y2 <- order(-y1, y$Hospital.Name)
y2 <- as.character(y$Hospital.Name)
View(y)
y1 <- as.numeric(y$rate)
View(y)
class(y$rate)
y$rate
factor(y$rate)
y1 <- as.numeric(factor(y$rate))
y1 <- as.numeric(factor(y$rate))
y1 <- y
y1[,'rate'] <- as.numeric(y1[,'rate'])
View(y1)
y1 <- y
y1[,'rate'] <- as.numeric(levels(y1[,'rate'])
View(y1)
View(y1)
y1[,'rate'] <- as.numeric(levels(y1[,'rate']))
View(y1)
factor(y1)
factor(y1$rate)
factor(y$rate)[1]
as.numeric(factor(y$rate)[1])
as.numeric(factor(y$rate)[2])
as.numeric(factor(y$rate)[[1]])
as.numeric(factor(y$rate))
factor(y$rate)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
y1[,'rate'] <- as.numeric.factor(y1[,'rate'])
View(y1)
y2 <- order(-y1$rate, y1$Hospital.Name)
y2 <- order(-y1$rate)
class(y1$rate)
sort(y1$rate)
y2 <- order(y1$rate)
library(sqldf)
x <- sqldf("select rate, Hospital.Name from y order by rate, Hospital.Name")
View(y)
colnames(y) <- c("rate", "name")
#take away NAs.
y <- y[! is.na(y$rate), ]
x <- sqldf("select rate, name from y order by rate, Hospital.Name")
x <- sqldf("select rate, name from y order by rate, name")
View(x)
x <- sqldf("select rate, name from y order by rate")
View(x)
x <- sqldf("select rate, name from y order by rate desc")
View(x)
x <- sqldf("select rate, name from y1 order by rate")
y1 <- y
y1[,'rate'] <- as.numeric.factor(y1[,'rate'])
x <- sqldf("select rate, name from y1 order by rate")
View(x)
x <- sqldf("select rate, name from y1 order by rate, name")
View(x)
y <- y[! is.na(y$rate), ]
y[,'rate'] <- as.numeric.factor(y[,'rate'])
x <- sqldf("select rate, name from y order by rate, name")
x[1,'name']
x[100,'name']
source("rankhospital.R")
rankhospital("TX", "heart attack", 1)
rankhospital("BB", "heart attack", 1)
rankhospital("BB", "heart attak", 1)
source("rankhospital.R")
rankhospital("BB", "heart attack", 1)
rankhospital("BB", "heart attak", 1)
rankhospital("TX", "heart attack", 1)
source("rankhospital.R")
rankhospital("BB", "heart attack", 1)
rankhospital("BB", "heart attak", 1)
rankhospital("TX", "heart attack", 1)
source("rankhospital.R")
rankhospital("BB", "heart attack", 1)
rankhospital("BB", "heart attak", 1)
rankhospital("TX", "heart attack", 1)
source("rankhospital.R")
rankhospital("TX", "heart attack", 1)
d[d$State=="TX", 'state']
View(d)
d[d$State=="TX", 'State']
source("rankhospital.R")
rankhospital("TX", "heart attack", 1)
source("rankhospital.R")
rankhospital("TX", "heart attack", 1)
View(x)
state <- "TX"
outcome <- "heart failure"
rank <- 1
rv <- validateRank(d[d$State==state, 'State'], rank)
r = x[rv, 'name']
r = as.character(x[rv, 'name'])
View(x)
rankhospital(state, "heart attack", rank)
source("rankhospital.R")
rankhospital(state, "heart attack", rank)
rankhospital("TX", "heart attack", "best")
rankhospital("TX", "heat attack", 100)
rankhospital("TX", "heart attack", 100)
View(x)
rank <- 100
rv <- validateRank(d[d$State==state, 'State'], rank)
r = as.character(x[rv, 'name'])
rankhospital("TX", "heart attack", 100)
y <- as.data.frame(cbind(d[d$State==state, col[,outcome]], d[d$State== state,"Hospital.Name"]))
colnames(y) <- c("rate", "name")
#take away NAs.
y <- y[! is.na(y$rate), ]
y[,'rate'] <- as.numeric.factor(y[,'rate'])
x <- sqldf("select rate, name from y order by rate, name")
View(x)
r = as.character(x[rv, 'name'])
source("rankhospital.R")
state <- "TX"
outcome <- "heart failure"
rank <- 100
rv <- validateRank(d[d$State==state, 'State'], rank)
rankhospital(state, "heart attack", rv)
source("rankhospital.R")
rv <- validateRank(d[d$State==state, 'State'], rank)
rankhospital(state, "heart attack", rv)
source("rankhospital.R")
rankhospital(state, "heart attack", rv)
source("rankhospital.R")
rankhospital(state, "heart attack", rv)
source("rankhospital.R")
rankhospital(state, "heart attack", rv)
dim(y)[2]
dim(y)[1]
source("rankhospital.R")
rankhospital(state, "heart attack", rv)
state <- "TX"
outcome <- "heart failure"
rank = "1"
rv <- validateRank(d[d$State==state, 'State'], rank)
suppressWarnings(d[d$State==state, col[,outcome]] <- as.numeric(d[d$State==state, col[,outcome]]))
y <- as.data.frame(cbind(d[d$State==state, col[,outcome]], d[d$State== state,"Hospital.Name"]))
colnames(y) <- c("rate", "name")
#take away NAs.
y <- y[! is.na(y$rate), ]
source("rankhospital.R")
rv <- validateRank(d[d$State==state, 'State'], rank)
rank <- 100
rv <- validateRank(d[d$State==state, 'State'], rank)
rv <- validateRank(d[d$State==state, col[,outcome]], rank)
dim(d[d$State==state, col[,outcome]])[1]
d[d$State==state, col[,outcome]]
rv <- validateRank(d[d$State==state, 'State'], rank)
rv <- validateRank(d[d$State==state & !is.na(d), 'State'], rank)
rv <- validateRank(d[d$State==state & !is.na(d), 'State'], rank)
rm(rv)
rv <- validateRank(d[d$State==state & !is.na(d), 'State'], rank)
d[d$State==state & !is.na(d), 'State']
tail(d[d$State==state & !is.na(d)))
tail(d[d$State==state & !is.na(d)))
tail(d[d$State==state & !is.na(d))
tail( d[d$State==state & !is.na(d), 'State'] )
tail( d[d$State==state & !is.na(d[,col(,outcome)]), 'State'] )
tail( d[d$State==state, 'State'] )
tail( d[d$State==state & !is.na(d), 'State'] )
dim( d[d$State==state & !is.na(d), 'State'] )
dim( d[d$State==state & is.na(d), 'State'] )
dim( d[d$State==state & is.na(d[,17]), 'State'] )
dim( d[d$State==state , 'State'] )
dim( d[d$State==state, 'State'] )
tail( d[d$State==state & ! is.na(d[,17]), 'State'] )
length( d[d$State==state & ! is.na(d[,17]), 'State'] )
length( d[d$State==state & ! is.na(d[,col[,outcome]]), 'State'] )
rank <- "worst"
rv <- validateRank( d[d$State==state & ! is.na(d[,col[,outcome]]), 'State'], rank)
rankhospital("TX", "heart attack", 100)
d[d$State==state & ! is.na(d[,col[,outcome]],'State']
d[d$State==state & ! is.na(d[,col[,outcome]]),'State']
source("rankhospital.R")
rankhospital("BB", "heart attack", 1)
rankhospital("BB", "heart attak", 1)
rv <- validateRank( d[d$State==state & ! is.na(d[,col[,outcome]]), 'State'], rank)
rankhospital(state, "heart attack", rv)
rankhospital("TX", "heart attack", 100)
source("rankhospital.R")
rank <- "worst"
m <- validateParameters(state, outcome, d[d$State == state,'State'][1], col)
rv <- validateRank( d[d$State==state & ! is.na(d[,col[,outcome]]), 'State'], rank)
rm(d)
rankhospital(state, "heart attack", rv)
rankhospital(state, "heart attack", 100)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
rankall <- function(outcomeChr, rankObj = "best") {  outcomeDfr <- Init("Outcome-of-care-measures.csv")    suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))  suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))  suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))    tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State,                                               length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))  rownames(tableDfr) <- NULL    inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),                          Col = c(11, 17, 23))    if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0)     stop("invalid outcome")    nameChr <- character(0)    for (stateChr in tableDfr$State) {    stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]    colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]    stateDfr <- stateDfr[complete.cases(stateDfr[, colNum]), ]    stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name),                          ]        if (rankObj == "best")       rankNum <- 1 else if (rankObj == "worst")         rankNum <- nrow(stateDfr) else suppressWarnings(rankNum <- as.numeric(rankObj))        nameChr <- c(nameChr, stateDfr[rankNum, ]$Hospital.Name)  }    return(data.frame(hospital = nameChr, state = tableDfr$State))}
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
pp<- rankall("pneumonia", "worst")
View(pp)
source("rankall.R")
head(rankall("heart attack", 20), 10)
pp<- rankall("pneumonia", "worst")
tail(rankall("heart failure"), 10)
warnings()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
pp<- rankall("pneumonia", "worst")
tail(rankall("heart failure"), 10)
submit()
submit()
submit()
